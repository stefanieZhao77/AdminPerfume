---
import Head from "@components/_head.astro";
import Footer from "@components/dashboard/_footer.astro";
import Topbar from "@components/dashboard/_topbar.astro";
import Sidenav from "@components/dashboard/_sidenav.astro";
import Scripts from "@components/_scripts.astro";
import QueryTable from "@components/QueryTable.astro";
import MaterialsTable from "@components/react/MaterialsTable.tsx";

const title = "原料";
const path = "../../../dist";
const mainPage = "materials";
const page = "materials-list";
---

<!doctype html>
<html lang="zh-CN">
  <head>
    <Head title={title} path={path} />
    <style is:inline>
      .table-sticky thead th {
        position: sticky;
        top: 0;
        z-index: 2;
        background: var(--bs-body-bg);
      }
      .table-sticky thead th:first-child,
      .table-sticky tbody td:first-child {
        position: sticky;
        left: 0;
        z-index: 3;
        background: var(--bs-body-bg);
        box-shadow: 2px 0 0 rgba(0, 0, 0, 0.05);
      }
      .table thead th {
        white-space: nowrap;
      }
      .qt-col-btn {
        white-space: nowrap;
      }
    </style>
  </head>
  <body class="layout-fixed sidebar-expand-lg bg-body-tertiary">
    <div class="app-wrapper">
      <Topbar path={path} />
      <Sidenav path={path} mainPage={mainPage} page={page} />
      <main class="app-main">
        <div class="app-content-header">
          <div class="container-fluid">
            <div class="row">
              <div class="col-sm-6"><h3 class="mb-0">原料</h3></div>
              <div class="col-sm-6">
                <ol class="breadcrumb float-sm-end">
                  <li class="breadcrumb-item"><a href="#">首页</a></li>
                  <li class="breadcrumb-item active" aria-current="page">
                    原料
                  </li>
                </ol>
              </div>
            </div>
          </div>
        </div>
        <div class="app-content">
          <div class="container-fluid">
            <div class="card mb-4">
              <div class="card-header"><h3 class="card-title">查询</h3></div>
              <div class="card-body">
                <form id="materials-form" class="row g-3">
                  <div class="col-md-4">
                    <label class="form-label">关键词</label>
                    <input
                      id="kw"
                      type="text"
                      class="form-control"
                      placeholder="名称/CAS/标签"
                    />
                  </div>
                  <div class="col-md-3">
                    <label class="form-label">分类</label>
                    <select id="category" class="form-select">
                      <option value="">全部</option>
                      <option>精油</option>
                      <option>合成香料</option>
                      <option>树脂</option>
                      <option>溶剂</option>
                    </select>
                  </div>
                  <div class="col-md-3">
                    <label class="form-label">状态</label>
                    <select id="status" class="form-select">
                      <option value="">全部</option>
                      <option>在库</option>
                      <option>低库存</option>
                      <option>缺货</option>
                    </select>
                  </div>
                  <div class="col-md-2 align-self-end">
                    <button
                      id="searchBtn"
                      type="button"
                      class="btn btn-primary me-2">查询</button
                    >
                    <button
                      id="resetBtn"
                      type="button"
                      class="btn btn-outline-secondary">重置</button
                    >
                  </div>
                </form>
              </div>
            </div>

            <div class="card">
              <div
                class="card-header d-flex align-items-center justify-content-between"
              >
                <h3 class="card-title">原料列表</h3>
                <div class="qt-col-menu">
                  <button
                    class="btn btn-outline-secondary btn-sm me-2"
                    id="exportBtn">导出可见列</button
                  >
                  <button
                    class="btn btn-outline-secondary btn-sm qt-col-btn"
                    id="colMenuBtn">列显示/隐藏</button
                  >
                  <div class="qt-dropdown" id="colMenu"></div>
                </div>
              </div>
              <div class="card-body p-0">
                <div class="table-responsive" style="max-height: 520px;">
                  <table
                    class="table table-hover mb-0 table-sticky"
                    id="materials-table"
                  >
                    <thead class="table-light border-bottom">
                      <tr>
                        <th data-qt-key="id" style="width: 140px">编号</th>
                        <th data-qt-key="name">名称</th>
                        <th data-qt-key="label">英文名</th>
                        <th data-qt-key="cas">CAS</th>
                        <th data-qt-key="category">分类</th>
                        <th data-qt-key="stock">库存</th>
                        <th data-qt-key="status">状态</th>
                        <th data-qt-key="updatedAt" style="width: 200px"
                          >更新时间</th
                        >
                      </tr>
                    </thead>
                    <tbody id="materials-tbody"></tbody>
                  </table>
                </div>
              </div>
              <div
                class="card-footer d-flex align-items-center justify-content-between"
              >
                <div class="text-body-secondary small" id="materials-stats">
                  共 0 条
                </div>
                <ul
                  class="pagination pagination-sm m-0"
                  id="materials-pagination"
                >
                </ul>
              </div>
            </div>

            <div class="card mt-4">
              <div class="card-header">
                <h3 class="card-title">React 数据绑定（Mock API）</h3>
              </div>
              <div class="card-body">
                <MaterialsTable client:load />
              </div>
            </div>
          </div>
        </div>
      </main>
      <Footer />
    </div>
    <Scripts path={path} />

    <QueryTable />

    <script is:inline>
      // IFRA Standards Data
      window.ifraStandards = [
        {
          cas_number: "144020-22-4",
          title:
            "Acetic acid, anhydride, reaction products with 1,5,10-Trimethyl-1,5,9-cyclododecatriene",
          chinese_name: "三甲基琥珀酮",
          type: "R",
          category: ["日化香精"],
        },
        {
          cas_number: "84082-84-8",
          title: "Acetylated Vetiver oil",
          chinese_name: "乙酰化香根草油",
          type: "R",
          category: ["日化香精"],
        },
        {
          cas_number: "7493-74-5",
          title: "Allyl phenoxyacetate",
          chinese_name: "苯氧乙酸烯丙酯",
          type: "",
          category: ["日化香精","食品香精"],
        },
        {
          cas_number: "101-85-9",
          title: "alpha-Amyl cinnamic alcohol",
          chinese_name: "α-戊基桂醇",
          type: "R",
          category: ["日化香精","食品香精"],
        },
        {
          cas_number: "122-40-7",
          title: "alpha-Amyl cinnamic aldehyde",
          chinese_name: "α-戊基桂醛",
          type: "R",
          category: ["日化香精","食品香精"],
        },
        {
          cas_number: "105-13-5",
          title: "Anisyl alcohol",
          chinese_name: "4-甲氧基苄醇",
          type: "R",
          category: ["日化香精", "食品香精"],
        },
        {
          cas_number: "100-52-7",
          title: "Benzaldehyde",
          chinese_name: "苯甲醛",
          type: "R",
          category: ["日化香精", "食品香精"],
        },
        {
          cas_number: "100-51-6",
          title: "Benzyl alcohol",
          chinese_name: "苯甲醇",
          type: "R",
          category: ["日化香精", "食品香精"],
        },
        {
          cas_number: "120-51-4",
          title: "Benzyl benzoate",
          chinese_name: "苯甲酸苄酯",
          type: "R",
          category: ["日化香精","食品香精"],
        },
        {
          cas_number: "103-41-3",
          title: "Benzyl cinnamate",
          chinese_name: "桂酸苄酯",
          type: "R",
          category: ["日化香精", "食品香精"],
        },
        {
          cas_number: "118-58-1",
          title: "Benzyl salicylate",
          chinese_name: "水杨酸苄酯",
          type: "R",
          category: ["日化香精"],
        },
        {
          cas_number: "7492-44-6",
          title: "alpha-Butylcinnamaldehyde",
          chinese_name: "α-丁基桂醛",
          type: "R",
          category: ["日化香精"],
        },
        {
          cas_number: "62518-65-4",
          title: "3-(m-tert-Butylphenyl)-2-methylpropionaldehyde (m-BMHCA)",
          chinese_name: "3-(间-叔丁基苯基)-2-甲基丙醛",
          type: "R",
          category: ["日化香精"],
        },
        {
          cas_number: "18127-01-0",
          title: "p-tert-Butyldihydrocinnamaldehyde",
          chinese_name: "对叔丁基 -2-甲基肉桂醛",
          type: "R",
          category: ["日化香精"],
        },
        {
          cas_number: "80-54-6",
          title: "p-tert-Butyl-α-methylhydrocinnamic aldehyde (p-BMHCA)",
          chinese_name: "铃兰醛",
          type: "",
          category: ["日化香精"],
        },
        {
          cas_number: "99-49-0, 2244-16-8, 6485-40-1",
          title: "Carvone",
          chinese_name: "香芹酮",
          type: "R",
          category: ["日化香精", "食品香精"],
        },
        {
          cas_number: "104-54-1",
          title: "Cinnamic alcohol",
          chinese_name: "桂醇",
          type: "R",
          category: ["日化香精", "食品香精"],
        },
        {
          cas_number: "104-55-2",
          title: "Cinnamic aldehyde",
          chinese_name: "桂醛",
          type: "R",
          category: ["日化香精", "食品香精", "烟草香精"],
        },
        {
          cas_number: "4364-06-1",
          title: "Cinnamic aldehyde dimethyl acetal",
          chinese_name: "桂醛二甲基缩醛",
          type: "R",
          category: ["日化香精"],
        },
        {
          cas_number: "1885-38-7, 4360-47-8",
          title: "Cinnamyl nitrile",
          chinese_name: "桂腈",
          type: "R",
          category: ["日化香精"],
        },
        {
          cas_number: "5392-40-5, 141-27-5, 106-26-3",
          title: "Citral",
          chinese_name: "柠檬醛",
          type: "R",
          category: ["日化香精", "食品香精"],
        },
        {
          cas_number:
            "106-22-9, 1117-61-9, 26489-01-0, 6812-78-8, 141-25-3, 7540-51-4",
          title: "Citronellol",
          chinese_name: "香茅醇",
          type: "R",
          category: ["日化香精", "食品香精"],
        },
        {
          cas_number: "91-64-5",
          title: "Coumarin",
          chinese_name: "香豆素",
          type: "R",
          category: ["日化香精", "烟草香精"],
        },
        {
          cas_number: "122-03-2",
          title: "Cuminaldehyde",
          chinese_name: "异丙苯醛",
          type: "R",
          category: ["日化香精", "食品香精"],
        },
        {
          cas_number: "103-95-7",
          title: "Cyclamen aldehyde",
          chinese_name: "仙客来醛",
          type: "",
          category: ["日化香精"],
        },
        {
          cas_number: "106-02-5",
          title: "Cyclopentadecanolide",
          chinese_name: "环十五内酯",
          type: "R",
          category: ["日化香精"],
        },
        {
          cas_number: "103-50-4",
          title: "Dibenzyl ether",
          chinese_name: "二苄醚",
          type: "R",
          category: ["日化香精"],
        },
        {
          cas_number: "33704-61-9",
          title: "6,7-Dihydro-1,1,2,3,3-pentamethyl-4(5H)-indanone (DPMI)",
          chinese_name: "6,7-二氢-1,1,2,3,3-五甲基-4(5H)-茚酮 (DPMI)",
          type: "R",
          category: ["日化香精"],
        },
        {
          cas_number: "119-84-6",
          title: "Dihydrocoumarin",
          chinese_name: "二氢香豆素",
          type: "R",
          category: ["日化香精", "食品香精", "烟草香精"],
        },
        {
          cas_number:
            "68737-61-1 (mixed isomers), 68039-49-6, 68039-48-5, 27939-60-2, 67801-65-4, 36635-35-5, 68084-52-6, 35145-02-9",
          title: "Dimethylcyclohex-3-ene-1-carbaldehyde (mixed isomers)",
          chinese_name: "二甲基环己-3-烯-1-甲醛 (混合异构体)",
          type: "R",
          category: ["日化香精"],
        },
        {
          cas_number: "56973-85-4",
          title: "1-(5,5-Dimethyl-1-cyclohexen-1-yl)pent-4-en-1-one",
          chinese_name: "1-(5,5-二甲基-1-环己烯-1-基)戊-4-烯-1-酮",
          type: "R",
          category: ["日化香精"],
        },
        {
          cas_number: "103694-68-4",
          title: "2,2-Dimethyl-3-(3-tolyl)propan-1-ol",
          chinese_name: "2,2-二甲基-3-(3-甲苯基)丙-1-醇",
          type: "",
          category: ["日化香精"],
        },
        {
          cas_number: "2563-07-7",
          title: "2-Ethoxy-4-methylphenol",
          chinese_name: "2-乙氧基-4-甲基苯酚",
          type: "R",
          category: ["日化香精", "食品香精"],
        },
        {
          cas_number: "4748-78-1",
          title: "p-Ethylbenzaldehyde",
          chinese_name: "对-乙基苯甲醛",
          type: "R",
          category: ["日化香精"],
        },
        {
          cas_number: "97-53-0",
          title: "Eugenol",
          chinese_name: "丁香酚",
          type: "R",
          category: ["日化香精", "食品香精", "烟草香精"],
        },
        {
          cas_number: "4602-84-0",
          title: "Farnesol",
          chinese_name: "法尼醇",
          type: "",
          category: ["日化香精"],
        },
        {
          cas_number: "106-24-1",
          title: "Geraniol",
          chinese_name: "香叶醇",
          type: "R",
          category: ["日化香精", "食品香精"],
        },
        {
          cas_number: "39189-74-7",
          title: "2-Heptylidene cyclopentan-1-one",
          chinese_name: "2-庚叉环戊-1-酮",
          type: "R",
          category: ["日化香精"],
        },
        {
          cas_number: "6728-26-3, 505-57-7, 16635-54-4",
          title: "2-Hexenal",
          chinese_name: "2-己烯醛",
          type: "R",
          category: ["日化香精", "食品香精"],
        },
        {
          cas_number: "101-86-0",
          title: "alpha-Hexyl cinnamic aldehyde",
          chinese_name: "α-己基桂醛",
          type: "R",
          category: ["日化香精"],
        },
        {
          cas_number: "17373-89-6",
          title: "alpha-Hexylidene cyclopentanone",
          chinese_name: "α-己叉环戊酮",
          type: "R",
          category: ["日化香精"],
        },
        {
          cas_number: "6259-76-3",
          title: "Hexyl salicylate",
          chinese_name: "己基水杨酸酯",
          type: "R",
          category: ["日化香精"],
        },
        {
          cas_number: "107-75-5",
          title: "Hydroxycitronellal",
          chinese_name: "羟基香茅醛",
          type: "R",
          category: ["日化香精"],
        },
        {
          cas_number: "31906-04-4, 51414-25-6",
          title:
            "3 and 4-(4-Hydroxy-4-methylpentyl)-3-cyclohexene-1-carboxaldehyde (HMPCC)",
          chinese_name: "3和4-(4-羟基-4-甲基戊基)-3-环己烯-1-甲醛 (HMPCC)",
          type: "R",
          category: ["日化香精"],
        },
        {
          cas_number: "6658-48-6",
          title: "p-Isobutyl-alpha-methyl hydrocinnamaldehyde",
          chinese_name: "对-异丁基-α-甲基氢化桂醛",
          type: "R",
          category: ["日化香精"],
        },
        {
          cas_number: "1335-66-6, 1423-46-7, 67634-07-5",
          title: "Isocyclocitral",
          chinese_name: "异环柠檬醛",
          type: "R",
          category: ["日化香精"],
        },
        {
          cas_number: "68527-77-5",
          title: "Isocyclogeraniol",
          chinese_name: "异环香叶醇",
          type: "R",
          category: ["日化香精"],
        },
        {
          cas_number: "97-54-1, 5932-68-3",
          title: "Isoeugenol",
          chinese_name: "异丁香酚",
          type: "R",
          category: ["日化香精", "食品香精"],
        },
        {
          cas_number: "8022-96-6, 8024-43-9, 90045-94-6, 84776-64-7",
          title: "Jasmine absolute (grandiflorum)",
          chinese_name: "茉莉净油 (大花茉莉)",
          type: "R",
          category: ["日化香精", "食品香精"],
        },
        {
          cas_number: "91770-14-8, 1034798-23-6",
          title: "Jasmine absolute (sambac)",
          chinese_name: "茉莉净油 (桑巴茉莉)",
          type: "R",
          category: ["日化香精", "食品香精"],
        },
        {
          cas_number: "5989-27-5, 138-86-3, 7705-14-8",
          title: "Limonene",
          chinese_name: "柠烯",
          type: "S",
          category: ["日化香精", "食品香精"],
        },
        {
          cas_number: "78-70-6, 126-90-9, 126-91-0",
          title: "Linalool",
          chinese_name: "沉香醇",
          type: "S",
          category: ["日化香精", "食品香精"],
        },
      ];

      const statuses = ["在库", "低库存", "缺货"];

      // Generate materials from IFRA standards data
      const mockMaterials = window.ifraStandards
        ? window.ifraStandards.map((item, i) => {
            const st = statuses[(i * 7) % statuses.length];
            const stock =
              st === "缺货"
                ? 0
                : st === "低库存"
                  ? Math.floor(1 + Math.random() * 20)
                  : Math.floor(50 + Math.random() * 400);

            return {
              id: `MAT-${String(i + 1).padStart(4, "0")}`,
              name: item.chinese_name,
              label: item.title,
              cas: item.cas_number,
              category: item.category,
              stock,
              status: st,
              updatedAt: new Date(
                Date.now() - Math.random() * 60 * 24 * 3600 * 1000
              )
                .toISOString()
                .slice(0, 16)
                .replace("T", " "),
            };
          })
        : [];

      const state = { page: 1, pageSize: 10, kw: "", category: "", status: "" };

      function filterData() {
        return mockMaterials.filter((m) => {
          const hitKw =
            state.kw === "" ||
            [m.id, m.name, m.label, m.cas].some((v) =>
              v.toLowerCase().includes(state.kw.toLowerCase())
            );
          const hitCat = state.category === "" || m.category === state.category;
          const hitSt = state.status === "" || m.status === state.status;
          return hitKw && hitCat && hitSt;
        });
      }

      const qt = window.QueryTable.create({
        storageKey: "materials",
        pageSize: state.pageSize,
        tableSelector: "#materials-table",
        tbodySelector: "#materials-tbody",
        statsSelector: "#materials-stats",
        paginationSelector: "#materials-pagination",
        colMenuButtonSelector: "#colMenuBtn",
        colMenuDropdownSelector: "#colMenu",
        exportButtonSelector: "#exportBtn",
        columns: [
          { key: "id", label: "编号", visible: true, width: "140px" },
          { key: "name", label: "名称", visible: true },
          { key: "label", label: "英文名", visible: true },
          { key: "cas", label: "CAS", visible: true },
          { key: "category", label: "分类", visible: true },
          { key: "stock", label: "库存", visible: true },
          { key: "status", label: "状态", visible: true },
          {
            key: "updatedAt",
            label: "更新时间",
            visible: true,
            width: "200px",
          },
        ],
        getFilteredData: () => filterData(),
        renderRow: (m) => `
          <tr class="align-middle">
            <td><span class="fw-medium">${m.id}</span></td>
            <td>${m.name}</td>
            <td>${m.label}</td>
            <td>${m.cas}</td>
            <td>${m.category}</td>
            <td>${m.stock}</td>
            <td>${badge(m.status)}</td>
            <td>${m.updatedAt}</td>
          </tr>`,
        getCellValue: (m, key) => m[key] ?? "",
      });

      function badge(st) {
        const map = { 在库: "success", 低库存: "warning", 缺货: "danger" };
        return `<span class="badge text-bg-${map[st] || "secondary"}">${st}</span>`;
      }

      function bindEvents() {
        document
          .getElementById("materials-pagination")
          .addEventListener("click", (e) => {
            const a = e.target.closest("a.page-link");
            if (!a) return;
            e.preventDefault();
            const p = Number(a.dataset.page);
            if (Number.isNaN(p)) return;
            qt.state.page = Math.max(1, p);
            qt.render();
          });
        document.getElementById("searchBtn").addEventListener("click", () => {
          state.kw = document.getElementById("kw").value.trim();
          state.category = document.getElementById("category").value;
          state.status = document.getElementById("status").value;
          qt.state.page = 1;
          qt.render();
        });
        document.getElementById("resetBtn").addEventListener("click", () => {
          document.getElementById("materials-form").reset();
          state.kw = "";
          state.category = "";
          state.status = "";
          qt.state.page = 1;
          qt.render();
        });
        document.getElementById("kw").addEventListener("keydown", (e) => {
          if (e.key === "Enter") {
            e.preventDefault();
            document.getElementById("searchBtn").click();
          }
        });
      }

      bindEvents();
      qt.render();
    </script>
  </body>
</html>
