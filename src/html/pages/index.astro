---
import Head from "@components/_head.astro"
import Footer from "@components/dashboard/_footer.astro"
import Topbar from "@components/dashboard/_topbar.astro"
import Sidenav from "@components/dashboard/_sidenav.astro"
import Scripts from "@components/_scripts.astro"

const title = "AI智能用户和制香管理系统"
const path = "../../dist"
const mainPage = "dashboard"
const page = "index";

// Smart path resolution: calculate relative path based on directory depth
const pathname = Astro.url.pathname;
const pathSegments = pathname.split('/').filter(segment => segment !== '');
const depth = pathSegments.length > 0 ? pathSegments.length - 1 : 0;
const deploymentPath = depth === 0 ? './' : '../'.repeat(depth);
---

<!doctype html>
<html lang="en">
  <!--begin::Head-->
  <head>
    <Head title={title} path={path} />

    <!-- apexcharts -->
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/apexcharts@3.37.1/dist/apexcharts.css"
      integrity="sha256-4MX+61mt9NVvvuPjUWdUdyfZfxSB1/Rf9WtqRHgG5S0="
      crossorigin="anonymous"
    />

    <!-- jsvectormap -->
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/jsvectormap@1.5.3/dist/css/jsvectormap.min.css"
      integrity="sha256-+uGLJmmTKOqBr+2E6KDYs/NRsHxSkONXFHUL0fy2O/4="
      crossorigin="anonymous"
    />
    
    <!-- 登录检查脚本 -->
    <script is:inline>
      // 页面加载时立即检查登录状态
      (function() {
        if (typeof globalThis.sessionStorage !== 'undefined') {
          const currentUser = globalThis.sessionStorage.getItem('currentUser')
          if (!currentUser) {
            // 如果未登录，跳转到登录页面
            globalThis.location.href = '/login.html'
          }
        }
      })()
    </script>
    <style is:inline>
      .progress-card {
        transition: all 0.3s ease;
        border: 1px solid #e3e6f0;
        border-radius: 0.75rem;
        overflow: hidden;
      }
      .progress-card:hover {
        transform: translateY(-2px);
        box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
      }
      .progress-header {
        padding: 1rem;
        border-bottom: 1px solid #e3e6f0;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
      }
      .progress-body {
        padding: 1.5rem;
      }
      .progress-circle {
        width: 80px;
        height: 80px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.5rem;
        font-weight: bold;
        color: white;
        margin: 0 auto 1rem;
      }
      .progress-info {
        text-align: center;
      }
      .progress-steps {
        margin-top: 1rem;
      }
      .progress-step {
        display: flex;
        align-items: center;
        margin-bottom: 0.5rem;
        font-size: 0.875rem;
      }
      .step-indicator {
        width: 12px;
        height: 12px;
        border-radius: 50%;
        margin-right: 0.5rem;
        flex-shrink: 0;
      }
      .step-completed { background: #28a745; }
      .step-current { background: #007bff; }
      .step-pending { background: #6c757d; }
      .step-text {
        flex: 1;
        color: #6c757d;
      }
      .step-text.completed { color: #28a745; font-weight: 500; }
      .step-text.current { color: #007bff; font-weight: 500; }
      .status-badge {
        font-size: 0.75rem;
        padding: 0.25rem 0.5rem;
        border-radius: 0.375rem;
        font-weight: 500;
      }
    </style>
  </head>
  <!--end::Head-->
  <!--begin::Body-->
  <body class="layout-fixed sidebar-expand-lg bg-body-tertiary">
    <!--begin::App Wrapper-->
    <div class="app-wrapper">
      <Topbar path={path} />
      <Sidenav path={path} mainPage={mainPage} page={page} />
      <!--begin::App Main-->
      <main class="app-main">
        <!--begin::App Content Header-->
        <div class="app-content-header">
          <!--begin::Container-->
          <div class="container-fluid">
            <!--begin::Row-->
            <div class="row">
              <div class="col-sm-6">
                <h3 class="mb-0">Dashboard</h3>
              </div>
              <div class="col-sm-6">
                <ol class="breadcrumb float-sm-end">
                  <li class="breadcrumb-item"><a href="#" data-i18n="home">首页</a></li>
                  <li class="breadcrumb-item active" aria-current="page" data-i18n="dashboard">
                    仪表板
                  </li>
                </ol>
              </div>
            </div>
            <!--end::Row-->
          </div>
          <!--end::Container-->
        </div>
        <!--end::App Content Header-->
        <!--begin::App Content-->
        <div class="app-content">
          <!--begin::Container-->
          <div class="container-fluid">
            <!--begin::Row-->
            <div class="row">
              <!--begin::Col-->
              <div class="col-lg-3 col-6">
                <!--begin::Small Box Widget 1-->
                <div class="small-box text-bg-primary">
                  <div class="inner">
                    <h3 id="metric-orders">1,286</h3>

                    <p>总订单数</p>
                  </div>
                  <svg
                    class="small-box-icon"
                    fill="currentColor"
                    viewBox="0 0 24 24"
                    xmlns="http://www.w3.org/2000/svg"
                    aria-hidden="true"
                  >
                    <path
                      d="M2.25 2.25a.75.75 0 000 1.5h1.386c.17 0 .318.114.362.278l2.558 9.592a3.752 3.752 0 00-2.806 3.63c0 .414.336.75.75.75h15.75a.75.75 0 000-1.5H5.378A2.25 2.25 0 017.5 15h11.218a.75.75 0 00.674-.421 60.358 60.358 0 002.96-7.228.75.75 0 00-.525-.965A60.864 60.864 0 005.68 4.509l-.232-.867A1.875 1.875 0 003.636 2.25H2.25zM3.75 20.25a1.5 1.5 0 113 0 1.5 1.5 0 01-3 0zM16.5 20.25a1.5 1.5 0 113 0 1.5 1.5 0 01-3 0z"
                    ></path>
                  </svg>
                  <a
                    href="#"
                    class="small-box-footer link-light link-underline-opacity-0 link-underline-opacity-50-hover"
                    data-i18n="moreInfo"
                  >
                    更多信息 <i class="bi bi-link-45deg"></i>
                  </a>
                </div>
                <!--end::Small Box Widget 1-->
              </div>
              <!--end::Col-->
              <div class="col-lg-3 col-6">
                <!--begin::Small Box Widget 2-->
                <div class="small-box text-bg-success">
                  <div class="inner">
                    <h3 id="metric-users">482</h3>

                    <p>总用户数</p>
                  </div>
                  <svg
                    class="small-box-icon"
                    fill="currentColor"
                    viewBox="0 0 24 24"
                    xmlns="http://www.w3.org/2000/svg"
                    aria-hidden="true"
                  >
                    <path
                      d="M18.375 2.25c-1.035 0-1.875.84-1.875 1.875v15.75c0 1.035.84 1.875 1.875 1.875h.75c1.035 0 1.875-.84 1.875-1.875V4.125c0-1.036-.84-1.875-1.875-1.875h-.75zM9.75 8.625c0-1.036.84-1.875 1.875-1.875h.75c1.036 0 1.875.84 1.875 1.875v11.25c0 1.035-.84 1.875-1.875 1.875h-.75a1.875 1.875 0 01-1.875-1.875V8.625zM3 13.125c0-1.036.84-1.875 1.875-1.875h.75c1.036 0 1.875.84 1.875 1.875v6.75c0 1.035-.84 1.875-1.875 1.875h-.75A1.875 1.875 0 013 19.875v-6.75z"
                    ></path>
                  </svg>
                  <a
                    href="#"
                    class="small-box-footer link-light link-underline-opacity-0 link-underline-opacity-50-hover"
                    data-i18n="moreInfo"
                  >
                    更多信息 <i class="bi bi-link-45deg"></i>
                  </a>
                </div>
                <!--end::Small Box Widget 2-->
              </div>
              <!--end::Col-->
              <div class="col-lg-3 col-6">
                <!--begin::Small Box Widget 3-->
                <div class="small-box text-bg-warning">
                  <div class="inner">
                    <h3 id="metric-formulas">236</h3>

                    <p>配方总数</p>
                  </div>
                  <svg
                    class="small-box-icon"
                    fill="currentColor"
                    viewBox="0 0 24 24"
                    xmlns="http://www.w3.org/2000/svg"
                    aria-hidden="true"
                  >
                    <path
                      d="M6.25 6.375a4.125 4.125 0 118.25 0 4.125 4.125 0 01-8.25 0zM3.25 19.125a7.125 7.125 0 0114.25 0v.003l-.001.119a.75.75 0 01-.363.63 13.067 13.067 0 01-6.761 1.873c-2.472 0-4.786-.684-6.76-1.873a.75.75 0 01-.364-.63l-.001-.122zM19.75 7.5a.75.75 0 00-1.5 0v2.25H16a.75.75 0 000 1.5h2.25v2.25a.75.75 0 001.5 0v-2.25H22a.75.75 0 000-1.5h-2.25V7.5z"
                    ></path>
                  </svg>
                  <a
                    href="#"
                    class="small-box-footer link-dark link-underline-opacity-0 link-underline-opacity-50-hover"
                    data-i18n="moreInfo"
                  >
                    更多信息 <i class="bi bi-link-45deg"></i>
                  </a>
                </div>
                <!--end::Small Box Widget 3-->
              </div>
              <!--end::Col-->
              <div class="col-lg-3 col-6">
                <!--begin::Small Box Widget 4-->
                <div class="small-box text-bg-danger">
                  <div class="inner">
                    <h3 id="metric-order-growth">+18%</h3>

                    <p>订单增长率</p>
                  </div>
                  <svg
                    class="small-box-icon"
                    fill="currentColor"
                    viewBox="0 0 24 24"
                    xmlns="http://www.w3.org/2000/svg"
                    aria-hidden="true"
                  >
                    <path
                      clip-rule="evenodd"
                      fill-rule="evenodd"
                      d="M2.25 13.5a8.25 8.25 0 018.25-8.25.75.75 0 01.75.75v6.75H18a.75.75 0 01.75.75 8.25 8.25 0 01-16.5 0z"
                    ></path>
                    <path
                      clip-rule="evenodd"
                      fill-rule="evenodd"
                      d="M12.75 3a.75.75 0 01.75-.75 8.25 8.25 0 018.25 8.25.75.75 0 01-.75.75h-7.5a.75.75 0 01-.75-.75V3z"
                    ></path>
                  </svg>
                  <a
                    href="#"
                    class="small-box-footer link-light link-underline-opacity-0 link-underline-opacity-50-hover"
                    data-i18n="moreInfo"
                  >
                    更多信息 <i class="bi bi-link-45deg"></i>
                  </a>
                </div>
                <!--end::Small Box Widget 4-->
              </div>
              <!--end::Col-->
            </div>
            <!--end::Row-->
                        <!--begin::Row 第一行：地图和项目状态饼图-->
            <div class="row">
              <!-- 销售地图 -->
              <div class="col-lg-8">
                <div class="card mb-4">
                  <div class="card-header">
                    <h3 class="card-title">全国销售分布图</h3>
                  </div>
                  <div class="card-body">
                    <div id="sales-map" style="height: 420px"></div>
                  </div>
                </div>
              </div>

                            <!-- 项目状态分布 -->
              <div class="col-lg-4">
                <div class="card mb-4" style="height: 508px;">
                  <div class="card-header">
                    <h3 class="card-title">项目状态分布</h3>
                    <div class="card-tools">
                      <button type="button" class="btn btn-tool" data-lte-toggle="card-collapse">
                        <i data-lte-icon="expand" class="bi bi-plus-lg"></i>
                        <i data-lte-icon="collapse" class="bi bi-dash-lg"></i>
                      </button>
                    </div>
                  </div>
                  <div class="card-body" style="padding: 30px 20px;">
                    <div id="project-status-chart" style="height: 420px; width: 100%;"></div>
                  </div>
                </div>
              </div>
            </div>
            
            <!--begin::Row 第二行：订单趋势和配方分类-->
            <div class="row">
              <!-- 订单趋势分析 -->
              <div class="col-lg-8">
                <div class="card mb-4">
                  <div class="card-header">
                    <h3 class="card-title">订单趋势分析</h3>
                  </div>
                  <div class="card-body">
                    <div id="order-trend-chart" style="height:380px"></div>
                  </div>
                </div>
              </div>
              
              <!-- 配方分类统计 -->
              <div class="col-lg-4">
                <div class="card mb-4">
                  <div class="card-header">
                    <h3 class="card-title">配方分类统计</h3>
                  </div>
                  <div class="card-body">
                    <div id="formula-category-chart" style="height:380px"></div>
                  </div>
                </div>
              </div>
            </div>
            <!-- /.row (main row) -->
            
            <!--begin::Row 第三行：订单进度管理 -->
            <div class="row">
              <div class="col-12">
                <div class="card">
                  <div class="card-header">
                    <div class="d-flex align-items-center justify-content-between">
                      <h3 class="card-title mb-0">
                        <i class="bi bi-list-task me-2"></i>
                        项目进度概览
                      </h3>
                      <a href="/orders/index.html" class="btn btn-sm btn-outline-primary">
                        <i class="bi bi-arrow-right me-1"></i>
                        查看全部
                      </a>
                    </div>
                  </div>
                  <div class="card-body">
                    <div class="row" id="orderProgressCards">
                      <!-- 订单进度卡片将动态生成 -->
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
          <!--end::Container-->
        </div>
        <!--end::App Content-->
      </main>
      <!--end::App Main-->
      <Footer />
    </div>
    <!--end::App Wrapper-->
    <!--begin::Script-->
    <Scripts path={path} />

    <!-- OPTIONAL SCRIPTS -->

    <!-- sortablejs -->
    <script
      src="https://cdn.jsdelivr.net/npm/sortablejs@1.15.0/Sortable.min.js"
      crossorigin="anonymous"></script>

    <!-- sortablejs -->
    <script is:inline>
new Sortable(document.querySelector('.connectedSortable'), {
  group: 'shared',
  handle: '.card-header'
})

const cardHeaders = document.querySelectorAll(
  '.connectedSortable .card-header'
)
cardHeaders.forEach(cardHeader => {
  cardHeader.style.cursor = 'move'
})
    </script>

    <!-- ECharts -->
    <script src="https://cdn.jsdelivr.net/npm/echarts@5/dist/echarts.min.js" crossorigin="anonymous"></script>

    <!-- ECharts charts -->
    <script is:inline>
      document.addEventListener('DOMContentLoaded', async function() {
        // 检查 ECharts 是否加载
        if (typeof echarts === 'undefined') {
          console.error('ECharts 未正确加载');
          return;
        }

        async function loadChina(){
          try {
            const res = await fetch('https://geo.datav.aliyun.com/areas_v3/bound/100000_full.json');
            return res.json();
          } catch (error) {
            console.error('加载中国地图数据失败:', error);
            return null;
          }
        }

function genMonths(n){
  const d = new Date(); d.setDate(1);
  const arr=[]; for(let i=n-1;i>=0;i--){ const x=new Date(d.getFullYear(), d.getMonth()-i, 1); arr.push(x.toISOString().slice(0,10)) }
  return arr
}
function randSeries(n, base, variance){ return Array.from({length:n}, ()=> Math.max(0, Math.round(base + (Math.random()-0.5)*variance))) }
const months = genMonths(12)

        // 订单趋势分析
        const orderEl = document.getElementById('order-trend-chart')
        if (!orderEl) {
          console.error('订单趋势图容器未找到');
          return;
        }
        const orderChart = echarts.init(orderEl)
        const orderData = randSeries(months.length, 120, 80)
        const orderValue = randSeries(months.length, 580000, 300000)
        const orderOption = {
          tooltip: { trigger: 'axis' },
          legend: { data: ['订单数量','订单金额'] },
          grid: { left: 60, right: 60, top: 40, bottom: 40 },
          xAxis: { type: 'category', data: months.map(m => m.slice(5)) },
          yAxis: [ 
            { type:'value', name:'订单数量', position: 'left' }, 
            { type:'value', name:'订单金额(万)', position: 'right' } 
          ],
        series: [
            { name:'订单数量', type:'line', data: orderData, itemStyle:{ color:'#3b82f6' }, yAxisIndex:0, smooth:true, areaStyle:{ opacity:.2 } },
            { name:'订单金额', type:'bar', data: orderValue.map(v => Math.round(v/10000)), itemStyle:{ color:'#10b981' }, yAxisIndex:1, barMaxWidth: 25 },
          ]
        }
        orderChart.setOption(orderOption)

        // 配方分类统计
        const formulaEl = document.getElementById('formula-category-chart')
        if (!formulaEl) {
          console.error('配方分类图容器未找到');
          return;
        }
        const formulaChart = echarts.init(formulaEl)
        const formulaCategories = ['花香调', '果香调', '木质调', '东方调', '清新调', '海洋调']
        const formulaCategoryData = formulaCategories.map(cat => ({
          name: cat,
          value: Math.round(20 + Math.random() * 60)
        }))
        formulaChart.setOption({
          tooltip: { trigger: 'item', formatter: '{b}: {c} ({d}%)' },
          legend: { bottom: 0, itemGap: 10 },
          series: [{
            type:'pie', radius:'70%', center: ['50%', '45%'],
            data: formulaCategoryData,
            itemStyle: { 
              borderColor: '#fff', 
              borderWidth: 2,
              borderRadius: 8
            },
            label: { formatter: '{b}\n{d}%' },
            emphasis: { itemStyle: { shadowBlur: 10, shadowOffsetX: 0, shadowColor: 'rgba(0, 0, 0, 0.5)' } }
          }]
        })

        // 项目状态分布
        const statusEl = document.getElementById('project-status-chart')
        if (!statusEl) {
          console.error('项目状态图容器未找到');
          return;
        }
        const statusChart = echarts.init(statusEl)
        const statusData = [
          { value: 12, name: '未开始' },
          { value: 34, name: '进行中' },
          { value: 6, name: '阻塞' },
          { value: 28, name: '已完成' },
        ]
        statusChart.setOption({
          tooltip: { trigger: 'item' },
          legend: { 
            bottom: 10,
            left: 'center',
            itemGap: 12,
            textStyle: { fontSize: 12 },
            orient: 'horizontal'
          },
          series: [{
            type:'pie', 
            radius:['35%','60%'], 
            center: ['50%', '45%'],
            avoidLabelOverlap: true,
            itemStyle:{ borderColor: '#fff', borderWidth: 2 },
            data: statusData,
            label: { 
              show: true,
              formatter: '{b}\n{d}%',
              fontSize: 10,
              fontWeight: 'normal',
              position: 'outside'
            },
            labelLine: {
              show: true,
              length: 8,
              length2: 6,
              smooth: false
            }
          }]
        })

        // 销售地图 - 中国各省销售分布
        const mapEl = document.getElementById('sales-map')
        if (!mapEl) {
          console.error('销售地图容器未找到');
          return;
        }
        const mapChart = echarts.init(mapEl)
        const china = await loadChina();
        if (china) {
          echarts.registerMap('china', china)
          const salesData = [
            { name: '北京', value: 1580, orders: 342, customers: 128 },
            { name: '上海', value: 1420, orders: 296, customers: 115 },
            { name: '广东', value: 1320, orders: 284, customers: 98 },
            { name: '江苏', value: 980, orders: 218, customers: 76 },
            { name: '浙江', value: 860, orders: 186, customers: 65 },
            { name: '山东', value: 720, orders: 158, customers: 54 },
            { name: '四川', value: 640, orders: 142, customers: 48 },
            { name: '湖北', value: 520, orders: 115, customers: 39 },
            { name: '河南', value: 480, orders: 96, customers: 32 },
            { name: '福建', value: 420, orders: 89, customers: 28 },
            { name: '湖南', value: 380, orders: 76, customers: 25 },
            { name: '安徽', value: 340, orders: 68, customers: 22 },
            { name: '重庆', value: 310, orders: 62, customers: 20 },
            { name: '天津', value: 280, orders: 56, customers: 18 },
            { name: '陕西', value: 250, orders: 48, customers: 16 },
            { name: '辽宁', value: 220, orders: 42, customers: 14 },
            { name: '河北', value: 200, orders: 38, customers: 12 },
            { name: '江西', value: 180, orders: 34, customers: 11 },
            { name: '广西', value: 160, orders: 30, customers: 10 },
            { name: '云南', value: 140, orders: 26, customers: 9 },
          ]
          
          // 地图上的销售数据标注点
          const markPointData = [
            { name: '北京', coord: [116.4074, 39.9042], value: 1580, symbolSize: 60 },
            { name: '上海', coord: [121.4737, 31.2304], value: 1420, symbolSize: 55 },
            { name: '广州', coord: [113.2644, 23.1291], value: 1320, symbolSize: 50 },
            { name: '杭州', coord: [120.1551, 30.2741], value: 860, symbolSize: 45 },
            { name: '南京', coord: [118.7969, 32.0603], value: 980, symbolSize: 48 },
          ]
          
          mapChart.setOption({
            title: {
              text: '全国销售分布',
              left: 'center',
              textStyle: { fontSize: 16, color: '#333' }
            },
            tooltip: { 
              trigger: 'item', 
              formatter: params => {
                if (params.componentType === 'markPoint') {
                  return `${params.name}<br/>销售额: ${params.value}万元<br/>重点区域`
                } else {
                  const item = salesData.find(d => d.name === params.name)
                  if (item) {
                    return `${params.name}<br/>销售额: ${item.value}万元<br/>订单数: ${item.orders}<br/>客户数: ${item.customers}`
                  }
                  return `${params.name}: 暂无数据`
                }
              }
            },
            visualMap: { 
              min: 0, 
              max: 1600, 
              left: 'left', 
              bottom: 20, 
              text: ['高','低'], 
              calculable: true,
              inRange: {
                color: ['#e0f3ff', '#1890ff', '#006edd']
              }
            },
        series: [
          {
                type: 'map', 
                map: 'china', 
                roam: true,
                zoom: 1.2,
                itemStyle: { 
                  areaColor: '#f0f8ff', 
                  borderColor: '#999',
                  borderWidth: 1
                },
                emphasis: { 
                  itemStyle: { 
                    areaColor: '#4da6ff',
                    borderColor: '#333',
                    borderWidth: 2
                  } 
                },
                data: salesData,
                markPoint: {
                  symbol: 'pin',
                  symbolSize: data => data.symbolSize || 40,
                  itemStyle: {
                    color: '#ff4757',
                    borderColor: '#fff',
                    borderWidth: 2
                  },
                  label: {
                    show: true,
                    formatter: '{b}',
                    color: '#fff',
                    fontSize: 10,
                    fontWeight: 'bold'
                  },
                  data: markPointData
                },
                markLine: {
                  effect: {
                    show: true,
                    trailLength: 0.3,
                    symbol: 'arrow',
                    symbolSize: 8
                  },
                  lineStyle: {
                    color: '#ff6b81',
                    width: 2,
                    type: 'dashed'
                  },
                  data: [
                    [{ name: '北京', coord: [116.4074, 39.9042] }, { name: '上海', coord: [121.4737, 31.2304] }],
                    [{ name: '上海', coord: [121.4737, 31.2304] }, { name: '广州', coord: [113.2644, 23.1291] }],
                    [{ name: '北京', coord: [116.4074, 39.9042] }, { name: '杭州', coord: [120.1551, 30.2741] }],
                  ]
                }
              }
            ]
          })
        }

        // 移除了sparkline图表，专注于主要数据展示

        // 动态指标（仅示例）
        function setText(id, val){ const el=document.getElementById(id); if(el){ el.textContent = val } }
        setText('metric-orders', String(Math.round(1200+Math.random()*200)))
        setText('metric-users', String(Math.round(450+Math.random()*100)))
        setText('metric-formulas', String(Math.round(220+Math.random()*50)))
        setText('metric-order-growth', `+${Math.round(15+Math.random()*10)}%`)

        // 响应式
        window.addEventListener('resize', ()=>{
          const charts = [orderChart, formulaChart].filter(Boolean);
          charts.forEach(chart => chart.resize());
        })
        
        // 生成订单进度卡片
        generateOrderProgressCards()
      }) // 关闭 DOMContentLoaded 事件监听器
      
      // 生成订单进度卡片
      function generateOrderProgressCards() {
        const container = document.getElementById('orderProgressCards')
        if (!container) return
        
        // 模拟订单数据
        const orders = [
          {
            id: 'SO-0001',
            customer: '客户A',
            product: '清新的玫瑰香水',
            status: '调香师调整配方',
            progress: 60,
            steps: [
              { name: '需求确认', completed: true },
              { name: '配方设计', completed: true },
              { name: '调香师调整', completed: false, current: true },
              { name: '配香员配香', completed: false },
              { name: '评香师评价', completed: false },
              { name: '客户确认', completed: false }
            ],
            expectedDate: '2025-10-15'
          },
          {
            id: 'SO-0002',
            customer: '客户B',
            product: '木质调香水',
            status: '配香员配香',
            progress: 30,
            steps: [
              { name: '需求确认', completed: true },
              { name: '配方设计', completed: true },
              { name: '调香师调整', completed: true },
              { name: '配香员配香', completed: false, current: true },
              { name: '评香师评价', completed: false },
              { name: '客户确认', completed: false }
            ],
            expectedDate: '2025-10-20'
          },
          {
            id: 'SO-0003',
            customer: '客户C',
            product: '果香调香水',
            status: '评香师评价',
            progress: 80,
            steps: [
              { name: '需求确认', completed: true },
              { name: '配方设计', completed: true },
              { name: '调香师调整', completed: true },
              { name: '配香员配香', completed: true },
              { name: '评香师评价', completed: false, current: true },
              { name: '客户确认', completed: false }
            ],
            expectedDate: '2025-10-18'
          }
        ]
        
        let cardsHTML = ''
        
        orders.forEach(order => {
          const progressColor = order.progress >= 80 ? '#28a745' : 
                               order.progress >= 60 ? '#17a2b8' : 
                               order.progress >= 40 ? '#ffc107' : '#dc3545'
          
          let stepsHTML = ''
          order.steps.forEach(step => {
            let stepClass = 'step-pending'
            let textClass = ''
            
            if (step.completed) {
              stepClass = 'step-completed'
              textClass = 'completed'
            } else if (step.current) {
              stepClass = 'step-current'
              textClass = 'current'
            }
            
            stepsHTML += `
              <div class="progress-step">
                <div class="step-indicator ${stepClass}"></div>
                <div class="step-text ${textClass}">${step.name}</div>
              </div>
            `
          })
          
          cardsHTML += `
            <div class="col-lg-4 col-md-6 mb-4">
              <div class="progress-card">
                <div class="progress-header">
                  <div class="d-flex justify-content-between align-items-center">
                    <h6 class="mb-0">${order.id}</h6>
                    <span class="status-badge bg-light text-dark">${order.status}</span>
                  </div>
                  <small class="text-white-50">${order.customer} - ${order.product}</small>
                </div>
                <div class="progress-body">
                  <div class="progress-circle" style="background: ${progressColor}">
                    ${order.progress}%
                  </div>
                  <div class="progress-info">
                    <h6 class="mb-2">${order.product}</h6>
                    <p class="text-muted small mb-3">预计完成: ${order.expectedDate}</p>
                    <div class="progress-steps">
                      ${stepsHTML}
                    </div>
                  </div>
                </div>
              </div>
            </div>
          `
        })
        
        container.innerHTML = cardsHTML
      }
    </script>
    <!--end::Script-->
  </body><!--end::Body-->
</html>
